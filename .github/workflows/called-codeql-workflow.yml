name: Called workflow

on:
  workflow_call:
    inputs:
      language:
        required: true
        type: string
      runner-type:
        required: true
        type: string
      configuration-file:
        required: true
        type: string


jobs:
  analyze:
    name: Analyze
    # Runner size impacts CodeQL analysis time. To learn more, please see:
    #   - https://gh.io/recommended-hardware-resources-for-running-codeql
    #   - https://gh.io/supported-runners-and-hardware-resources
    #   - https://gh.io/using-larger-runners
    # Consider using larger runners for possible analysis time improvements.
    runs-on: ${{ inputs.runner-type }}
    timeout-minutes: ${{ (matrix.language == 'swift' && 120) || 360 }}
    permissions:
      # required for all workflows
      security-events: write

      # only required for workflows in private repositories
      actions: read
      contents: read

    strategy:
      fail-fast: false
      matrix:
        include:
        - language: javascript-typescript
          build-mode: none
        - language: csharp
          build-mode: none
        #language: [ '${{ inputs.language }}' ]
        # CodeQL supports [ 'c-cpp', 'csharp', 'go', 'java-kotlin', 'javascript-typescript', 'python', 'ruby', 'swift' ]
        # Use only 'java-kotlin' to analyze code written in Java, Kotlin or both
        # Use only 'javascript-typescript' to analyze code written in JavaScript, TypeScript or both
        # Learn more about CodeQL language support at https://aka.ms/codeql-docs/language-support

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up jq
      run: sudo apt-get install -y jq

    - name: Find if Open CodeQL vulnerabilities exist
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OWNER: Reusable-Test  # Replace with the repository owner username
          REPO: ${{ github.repository }}    # Replace with the repository name
          PRNUMBER: ${{ github.event.pull_request.number }}
      run: |
          #!/bin/bash

          set -e  # Exit immediately if a command exits with a non-zero status

          # Function to fetch vulnerabilities
          fetch_vulnerabilities() {
            local url="https://api.github.com/repos/${REPO}/code-scanning/alerts"
            local result=$(curl -s -H "Authorization: token ${GITHUB_TOKEN}" -H "Accept: application/vnd.github.v3+json" "$url")
            local open_vulnerabilities=$(echo "$result" | jq '[.[] | select(.state == "open")] | length')

           if [ "$open_vulnerabilities" -gt 0 ]; then
             echo "Found $open_vulnerabilities open vulnerabilities."
             exit 1  # Exit with a non-zero status to indicate an error condition
           else
             echo "No open vulnerabilities found."
           fi
          }
          # Main script execution
          fetch_vulnerabilities
    
    # Initializes the CodeQL tools for scanning.
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: ${{ matrix.language }}
        build-mode: ${{ matrix.build-mode }}
        # If you wish to specify custom queries, you can do so here or in a config file.
        # By default, queries listed here will override any specified in a config file.
        # Prefix the list here with "+" to use these queries and those in the config file.

        # For more details on CodeQL's query packs, refer to: https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#using-queries-in-ql-packs
        # queries: security-extended,security-and-quality


    # Autobuild attempts to build any compiled languages (C/C++, C#, Go, Java, or Swift).
    # If this step fails, then you should remove it and run the build manually (see below)
    - if: matrix.build-mode == 'manual'
      shell: bash
      run: |
        echo 'If you are using a "manual" build mode for one or more of the' \
          'languages you are analyzing, replace this with the commands to build' \
          'your code, for example:'
        echo '  make bootstrap'
        echo '  make release'
        exit 1

    # ‚ÑπÔ∏è Command-line programs to run using the OS shell.
    # üìö See https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#jobsjob_idstepsrun

    #   If the Autobuild fails above, remove it and uncomment the following three lines.
    #   modify them (or add more) to build your code if your project, please refer to the EXAMPLE below for guidance.

    # - run: |
    #     echo "Run, Build Application using script"
    #     ./location_of_script_within_repo/buildscript.sh

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3
      with:
        category: "/language:${{matrix.language}}"
